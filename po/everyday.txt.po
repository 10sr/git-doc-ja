# Copyright (C) 2013 Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
#
# Yasuaki Narita <narita.ys@gmail.com>, 2013.
msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: 2013-12-07 00:31+0900\n"
"PO-Revision-Date: 2013-12-04 01:44+0900\n"
"Last-Translator: Yasuaki Narita <narita.ys@gmail.com>\n"
"Language-Team: Japanese <>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Lokalize 1.4\n"

#. type: Title =
#: ../../everyday.txt:2
#, fuzzy, no-wrap
msgid "Everyday Git With 20 Commands Or So"
msgstr "約20個のコマンドによる日々のGIT活用"

#. type: Plain text
#: ../../everyday.txt:6
#, fuzzy
msgid ""
"<<Individual Developer (Standalone)>> commands are essential for anybody who "
"makes a commit, even for somebody who works alone."
msgstr ""
"<<Individual Developer (Standalone),[個々の開発者 (単独)]>> は単独で作業をす"
"る場合でも、 コミットをする人にとって、必要不可欠なコマンドです。"

#. type: Plain text
#: ../../everyday.txt:9
#, fuzzy
msgid ""
"If you work with other people, you will need commands listed in the "
"<<Individual Developer (Participant)>> section as well."
msgstr ""
"もし他の人と一緒に作業するのであれば、<<Individual Developer (Participant),"
"[個々の開発者 (参加者)]>> セクションのコマンドリストが同様に必要でしょう。"

#. type: Plain text
#: ../../everyday.txt:12
#, fuzzy
msgid ""
"People who play the <<Integrator>> role need to learn some more commands in "
"addition to the above."
msgstr ""
"<<Integrator,[インテグレーター (統合者)]>>の役割の人は、上記コマンドに加え"
"て、 さらにいくつかのコマンドを学ぶ必要があります。"

#. type: Plain text
#: ../../everyday.txt:16
#, fuzzy
msgid ""
"<<Repository Administration>> commands are for system administrators who are "
"responsible for the care and feeding of Git repositories."
msgstr ""
"<<Repository Administration,[レポジトリ管理者]>>コマンドは、gitレポジトリ群"
"の 保守と供給の責任を負う、システム管理者のためのコマンドです。"

#. type: Title -
#: ../../everyday.txt:19
#, fuzzy, no-wrap
msgid "Individual Developer (Standalone)[[Individual Developer (Standalone)]]"
msgstr "個々の開発者 (単独)[[Individual Developer (Standalone)]]"

#. type: Plain text
#: ../../everyday.txt:24
#, fuzzy
msgid ""
"A standalone individual developer does not exchange patches with other "
"people, and works alone in a single repository, using the following commands."
msgstr ""
"他のユーザとパッチの交換をせず、一つのレポジトリの中で単独で作業を行う 独立し"
"た個々の開発者は、下記のコマンドを使います。"

#. type: Plain text
#: ../../everyday.txt:26
#, fuzzy
msgid "linkgit:git-init[1] to create a new repository."
msgstr "linkgit:git-init[1] は新しいレポジトリを作成します。"

#. type: Plain text
#: ../../everyday.txt:28
#, fuzzy
msgid "linkgit:git-show-branch[1] to see where you are."
msgstr ""
"linkgit:git-show-branch[1] はあなたがどこにいるかを見ることが出来ます。"

#. type: Plain text
#: ../../everyday.txt:30
#, fuzzy
msgid "linkgit:git-log[1] to see what happened."
msgstr "linkgit:git-log[1] は何が起きてきたかを見ることが出来ます。"

#. type: Plain text
#: ../../everyday.txt:33
#, fuzzy
msgid "linkgit:git-checkout[1] and linkgit:git-branch[1] to switch branches."
msgstr ""
"linkgit:git-checkout[1] と linkgit:git-branch[1] はブランチを切り替えます。"

#. type: Plain text
#: ../../everyday.txt:35
#, fuzzy
msgid "linkgit:git-add[1] to manage the index file."
msgstr "linkgit:git-add[1] はインデックスファイルを管理します。"

#. type: Plain text
#: ../../everyday.txt:38
#, fuzzy
msgid ""
"linkgit:git-diff[1] and linkgit:git-status[1] to see what you are in the "
"middle of doing."
msgstr ""
"linkgit:git-diff[1] と linkgit:git-status[1] は、 あなたの途中経過を確認しま"
"す。"

#. type: Plain text
#: ../../everyday.txt:40
#, fuzzy
msgid "linkgit:git-commit[1] to advance the current branch."
msgstr "linkgit:git-commit[1] は現在のブランチを前進させます。"

#. type: Plain text
#: ../../everyday.txt:43
#, fuzzy
msgid ""
"linkgit:git-reset[1] and linkgit:git-checkout[1] (with pathname parameters) "
"to undo changes."
msgstr ""
"linkgit:git-reset[1] と linkgit:git-checkout[1] (パス名パラメータ付き)  は変"
"更を元に戻します。"

#. type: Plain text
#: ../../everyday.txt:45
#, fuzzy
msgid "linkgit:git-merge[1] to merge between local branches."
msgstr "linkgit:git-merge[1] はローカルブランチ間のマージを行います。"

#. type: Plain text
#: ../../everyday.txt:47
#, fuzzy
msgid "linkgit:git-rebase[1] to maintain topic branches."
msgstr "linkgit:git-rebase[1] はトピックブランチのメンテナンスを行います。"

#. type: Plain text
#: ../../everyday.txt:49
#, fuzzy
msgid "linkgit:git-tag[1] to mark known point."
msgstr "linkgit:git-tag[1] は既知のポイントにマークを付けます。"

#. type: Title -
#: ../../everyday.txt:51 ../../everyday.txt:127 ../../everyday.txt:230
#: ../../everyday.txt:312 ../../user-manual.txt:728 ../../user-manual.txt:2061
#, fuzzy, no-wrap
msgid "Examples"
msgstr "Examples"

#. type: Labeled list
#: ../../everyday.txt:53
#, no-wrap
msgid "Use a tarball as a starting point for a new repository."
msgstr "新しいレポジトリのため、tarballを出発点に使います"

#. type: delimited block -
#: ../../everyday.txt:62
#, fuzzy, no-wrap
msgid ""
"$ tar zxf frotz.tar.gz\n"
"$ cd frotz\n"
"$ git init\n"
"$ git add . <1>\n"
"$ git commit -m \"import of frotz source tree.\"\n"
"$ git tag v2.43 <2>\n"
msgstr ""
"$ tar zxf frotz.tar.gz\n"
"$ cd frotz\n"
"$ git init\n"
"$ git add . <1>\n"
"$ git commit -m \"import of frotz source tree.\"\n"
"$ git tag v2.43 <2>\n"

#. type: Plain text
#: ../../everyday.txt:65
#, fuzzy
msgid "add everything under the current directory."
msgstr "現在ディレクリ以下全てを追加"

#. type: Plain text
#: ../../everyday.txt:66
#, fuzzy
msgid "make a lightweight, unannotated tag."
msgstr "軽量で注釈の無いタグを作る"

#. type: Labeled list
#: ../../everyday.txt:67
#, no-wrap
msgid "Create a topic branch and develop."
msgstr "トピックブランチの作成と開発"

#. type: delimited block -
#: ../../everyday.txt:86
#, fuzzy, no-wrap
msgid ""
"$ git checkout -b alsa-audio <1>\n"
"$ edit/compile/test\n"
"$ git checkout -- curses/ux_audio_oss.c <2>\n"
"$ git add curses/ux_audio_alsa.c <3>\n"
"$ edit/compile/test\n"
"$ git diff HEAD <4>\n"
"$ git commit -a -s <5>\n"
"$ edit/compile/test\n"
"$ git reset --soft HEAD^ <6>\n"
"$ edit/compile/test\n"
"$ git diff ORIG_HEAD <7>\n"
"$ git commit -a -c ORIG_HEAD <8>\n"
"$ git checkout master <9>\n"
"$ git merge alsa-audio <10>\n"
"$ git log --since='3 days ago' <11>\n"
"$ git log v2.43.. curses/ <12>\n"
msgstr ""
"$ git checkout -b alsa-audio <1>\n"
"$ edit/compile/test\n"
"$ git checkout -- curses/ux_audio_oss.c <2>\n"
"$ git add curses/ux_audio_alsa.c <3>\n"
"$ edit/compile/test\n"
"$ git diff HEAD <4>\n"
"$ git commit -a -s <5>\n"
"$ edit/compile/test\n"
"$ git reset --soft HEAD^ <6>\n"
"$ edit/compile/test\n"
"$ git diff ORIG_HEAD <7>\n"
"$ git commit -a -c ORIG_HEAD <8>\n"
"$ git checkout master <9>\n"
"$ git merge alsa-audio <10>\n"
"$ git log --since='3 days ago' <11>\n"
"$ git log v2.43.. curses/ <12>\n"

#. type: Plain text
#: ../../everyday.txt:89
#, fuzzy
msgid "create a new topic branch."
msgstr "新しいトピックブランチを作成。"

#. type: Plain text
#: ../../everyday.txt:90
#, fuzzy
msgid "revert your botched changes in `curses/ux_audio_oss.c`."
msgstr "`curses/ux_audio_oss.c`における失敗した変更を元に戻す。"

#. type: Plain text
#: ../../everyday.txt:92
#, fuzzy
msgid ""
"you need to tell Git if you added a new file; removal and modification will "
"be caught if you do `git commit -a` later."
msgstr ""
"新しいファイルを追加した場合は、gitに伝える必要があります; 削除と変更について"
"は後から`git commit -a`を実行すれば補足されるでしょう。"

#. type: Plain text
#: ../../everyday.txt:93
#, fuzzy
msgid "to see what changes you are committing."
msgstr "コミットしたときから何が変わったのかを確認することが出来ます。"

#. type: Plain text
#: ../../everyday.txt:94
#, fuzzy
msgid "commit everything as you have tested, with your sign-off."
msgstr ""
"あなたがテストをしているものとして、あなたの署名付きで全てをコミットします。"

#. type: Plain text
#: ../../everyday.txt:95
#, fuzzy
msgid "take the last commit back, keeping what is in the working tree."
msgstr ""
"ワーキングツリーの状態は保持したまま、一つ前のコミットの状態に戻します。"

#. type: Plain text
#: ../../everyday.txt:96
#, fuzzy
msgid "look at the changes since the premature commit we took back."
msgstr "(訳注: git reset等を使い)元に戻した早まったコミットからの変更を見る。"

#. type: Plain text
#: ../../everyday.txt:98
#, fuzzy
msgid ""
"redo the commit undone in the previous step, using the message you "
"originally wrote."
msgstr ""
"あなたが最初に書いたメッセージを使い、もう一度コミットを前回の状態に戻す"

#. type: Plain text
#: ../../everyday.txt:99
#, fuzzy
msgid "switch to the master branch."
msgstr "masterブランチに切り替え"

#. type: Plain text
#: ../../everyday.txt:100
#, fuzzy
msgid "merge a topic branch into your master branch."
msgstr "トピックブランチをmasterブランチにマージ"

#. type: Plain text
#: ../../everyday.txt:103
#, fuzzy
msgid ""
"review commit logs; other forms to limit output can be combined and include "
"`--max-count=10` (show 10 commits), `--until=2005-12-10`, etc."
msgstr ""
"コミットログを見直す; 出力の制限`\\--max-count=10` (10コミット分表示)等、 他"
"の形式を連結したり組み合わせることが出来ます。 その他には以下のようなものもあ"
"ります`\\--until=2005-12-10`。"

#. type: Plain text
#: ../../everyday.txt:105
#, fuzzy
msgid ""
"view only the changes that touch what's in `curses/` directory, since "
"`v2.43` tag."
msgstr "タグv2.43以降、`curses/`ディレクトリに触った変更のみ表示"

#. type: Title -
#: ../../everyday.txt:108
#, fuzzy, no-wrap
msgid "Individual Developer (Participant)[[Individual Developer (Participant)]]"
msgstr "個々の開発者 (参加者)[[Individual Developer (Participant)]]"

#. type: Plain text
#: ../../everyday.txt:113
#, fuzzy
msgid ""
"A developer working as a participant in a group project needs to learn how "
"to communicate with others, and uses these commands in addition to the ones "
"needed by a standalone developer."
msgstr ""
"グループロジェクトに参加して働く開発者は、単独の開発者にとって必要なものに加"
"え、 他者とのコミュニケーションの仕方と、これらのコマンドを学ぶ必要がありま"
"す。"

#. type: Plain text
#: ../../everyday.txt:116
#, fuzzy
msgid "linkgit:git-clone[1] from the upstream to prime your local repository."
msgstr ""
"linkgit:git-clone[1] はあなたのローカルレポジトリを 準備するために、上流から"
"のクローンを作成します。"

#. type: Plain text
#: ../../everyday.txt:119
#, fuzzy
msgid ""
"linkgit:git-pull[1] and linkgit:git-fetch[1] from \"origin\" to keep up-to-"
"date with the upstream."
msgstr ""
"\"origin\"からのlinkgit:git-pull[1] と linkgit:git-fetch[1] は、 上流との最新"
"の状態を保ちます。"

#. type: Plain text
#: ../../everyday.txt:122
#, fuzzy
msgid ""
"linkgit:git-push[1] to shared repository, if you adopt CVS style shared "
"repository workflow."
msgstr ""
"もしあなたがCVSスタイルの共有レポジトリワークフローを採用していれば、 "
"linkgit:git-push[1] はレポジトリを共有します。"

#. type: Plain text
#: ../../everyday.txt:125
#, fuzzy
msgid ""
"linkgit:git-format-patch[1] to prepare e-mail submission, if you adopt Linux "
"kernel-style public forum workflow."
msgstr ""
"もしあなたがLinuxカーネル的な公式討論型ワークフローを採用しているならば、 "
"linkgit:git-format-patch[1] はe-mailによる提案の準備を行います。"

#. type: Labeled list
#: ../../everyday.txt:129
#, no-wrap
msgid "Clone the upstream and work on it.  Feed changes to upstream."
msgstr "上流からクローンし作業を行う、変更を上流へ送る"

#. type: delimited block -
#: ../../everyday.txt:142
#, fuzzy, no-wrap
msgid ""
"$ git clone git://git.kernel.org/pub/scm/.../torvalds/linux-2.6 my2.6\n"
"$ cd my2.6\n"
"$ edit/compile/test; git commit -a -s <1>\n"
"$ git format-patch origin <2>\n"
"$ git pull <3>\n"
"$ git log -p ORIG_HEAD.. arch/i386 include/asm-i386 <4>\n"
"$ git pull git://git.kernel.org/pub/.../jgarzik/libata-dev.git ALL <5>\n"
"$ git reset --hard ORIG_HEAD <6>\n"
"$ git gc <7>\n"
"$ git fetch --tags <8>\n"
msgstr ""
"$ git clone git://git.kernel.org/pub/scm/.../torvalds/linux-2.6 my2.6\n"
"$ cd my2.6\n"
"$ edit/compile/test; git commit -a -s <1>\n"
"$ git format-patch origin <2>\n"
"$ git pull <3>\n"
"$ git log -p ORIG_HEAD.. arch/i386 include/asm-i386 <4>\n"
"$ git pull git://git.kernel.org/pub/.../jgarzik/libata-dev.git ALL <5>\n"
"$ git reset --hard ORIG_HEAD <6>\n"
"$ git gc <7>\n"
"$ git fetch --tags <8>\n"

#. type: Plain text
#: ../../everyday.txt:145
#, fuzzy
msgid "repeat as needed."
msgstr "重要なので繰り返します。"

#. type: Plain text
#: ../../everyday.txt:146
#, fuzzy
msgid "extract patches from your branch for e-mail submission."
msgstr "emailによる提案のため、あなたのブランチからパッチを抽出します。"

#. type: Plain text
#: ../../everyday.txt:148
#, fuzzy
msgid ""
"`git pull` fetches from `origin` by default and merges into the current "
"branch."
msgstr ""
"`git pull`は、通常`origin`から変更を取得し、現在のブランチへマージします。"

#. type: Plain text
#: ../../everyday.txt:151
#, fuzzy
msgid ""
"immediately after pulling, look at the changes done upstream since last time "
"we checked, only in the area we are interested in."
msgstr ""
"プルした直後、興味があるエリアのみ、前回チェックした時からの上流による変更を"
"確認します。"

#. type: Plain text
#: ../../everyday.txt:152
#, fuzzy
msgid "fetch from a specific branch from a specific repository and merge."
msgstr "レポジトリとブランチを指定し、取得後にマージします。"

#. type: Plain text
#: ../../everyday.txt:153
#, fuzzy
msgid "revert the pull."
msgstr "プルした状態を元に戻します。"

#. type: Plain text
#: ../../everyday.txt:154
#, fuzzy
msgid "garbage collect leftover objects from reverted pull."
msgstr ""
"プルした状態から元に戻した際、残されたオブジェクトをガベージコレクトします。"

#. type: Plain text
#: ../../everyday.txt:156
#, fuzzy
msgid ""
"from time to time, obtain official tags from the `origin` and store them "
"under `.git/refs/tags/`."
msgstr ""
"時々、公式なタグを `origin` から手に入れ、 `.git/refs/tags/` 以下へ格納しま"
"す。"

#. type: Labeled list
#: ../../everyday.txt:158
#, no-wrap
msgid "Push into another repository."
msgstr "他のレポジトリへpushする"

#. type: delimited block -
#: ../../everyday.txt:172
#, fuzzy, no-wrap
msgid ""
"satellite$ git clone mothership:frotz frotz <1>\n"
"satellite$ cd frotz\n"
"satellite$ git config --get-regexp '^(remote|branch)\\.' <2>\n"
"remote.origin.url mothership:frotz\n"
"remote.origin.fetch refs/heads/*:refs/remotes/origin/*\n"
"branch.master.remote origin\n"
"branch.master.merge refs/heads/master\n"
"satellite$ git config remote.origin.push \\\n"
"           master:refs/remotes/satellite/master <3>\n"
"satellite$ edit/compile/test/commit\n"
"satellite$ git push origin <4>\n"
msgstr ""
"satellite$ git clone mothership:frotz frotz <1>\n"
"satellite$ cd frotz\n"
"satellite$ git config --get-regexp '^(remote|branch)\\.' <2>\n"
"remote.origin.url mothership:frotz\n"
"remote.origin.fetch refs/heads/*:refs/remotes/origin/*\n"
"branch.master.remote origin\n"
"branch.master.merge refs/heads/master\n"
"satellite$ git config remote.origin.push \\\n"
"           master:refs/remotes/satellite/master <3>\n"
"satellite$ edit/compile/test/commit\n"
"satellite$ git push origin <4>\n"

#. type: delimited block -
#: ../../everyday.txt:176
#, fuzzy, no-wrap
msgid ""
"mothership$ cd frotz\n"
"mothership$ git checkout master\n"
"mothership$ git merge satellite/master <5>\n"
msgstr ""
"mothership$ cd frotz\n"
"mothership$ git checkout master\n"
"mothership$ git merge satellite/master <5>\n"

#. type: Plain text
#: ../../everyday.txt:181
#, fuzzy
msgid ""
"mothership machine has a frotz repository under your home directory; clone "
"from it to start a repository on the satellite machine."
msgstr ""
"mothershipマシンはホームディレクトリ以下にfrotzレポジトリを持っています; そこ"
"からクローンし、satelliteマシン上のレポジトリを開始します。"

#. type: Plain text
#: ../../everyday.txt:184
#, fuzzy
msgid ""
"clone sets these configuration variables by default.  It arranges `git pull` "
"to fetch and store the branches of mothership machine to local `remotes/"
"origin/*` remote-tracking branches."
msgstr ""
"クローンすると、これらの環境変数がデフォルトで設定されています。 mothershipマ"
"シンのブランチからローカルの`remotes/origin/*` 追跡ブランチに取得し格納するよ"
"う、`git pull`が変更されています。"

#. type: Plain text
#: ../../everyday.txt:186
#, fuzzy
msgid ""
"arrange `git push` to push local `master` branch to `remotes/satellite/"
"master` branch of the mothership machine."
msgstr ""
"ローカルの`master`ブランチから、mothershipマシンの `remotes/satellite/master`"
"ブランチへプッシュするよう、`git push`を変更します。"

#. type: Plain text
#: ../../everyday.txt:189
#, fuzzy
msgid ""
"push will stash our work away on `remotes/satellite/master` remote-tracking "
"branch on the mothership machine.  You could use this as a back-up method."
msgstr ""
"pushは私たちの作業を遠方のmothiershipマシンの 追跡ブランチ、`remotes/"
"satellite/master`に格納するでしょう。 これはバックアップとしても使えます。"

#. type: Plain text
#: ../../everyday.txt:191
#, fuzzy
msgid ""
"on mothership machine, merge the work done on the satellite machine into the "
"master branch."
msgstr ""
"mothershipマシン上で、satelliteマシン上で完了した作業を masterブランチへマー"
"ジします。"

#. type: Labeled list
#: ../../everyday.txt:192
#, no-wrap
msgid "Branch off of a specific tag."
msgstr "特定タグのブランチを切る"

#. type: delimited block -
#: ../../everyday.txt:200
#, fuzzy, no-wrap
msgid ""
"$ git checkout -b private2.6.14 v2.6.14 <1>\n"
"$ edit/compile/test; git commit -a\n"
"$ git checkout master\n"
"$ git format-patch -k -m --stdout v2.6.14..private2.6.14 |\n"
"  git am -3 -k <2>\n"
msgstr ""
"$ git checkout -b private2.6.14 v2.6.14 <1>\n"
"$ edit/compile/test; git commit -a\n"
"$ git checkout master\n"
"$ git format-patch -k -m --stdout v2.6.14..private2.6.14 |\n"
"  git am -3 -k <2>\n"

#. type: Plain text
#: ../../everyday.txt:204
#, fuzzy
msgid ""
"create a private branch based on a well known (but somewhat behind)  tag."
msgstr "既知の(ただし幾分過去の)タグから、プラベートなブランチを作成 。"

#. type: Plain text
#: ../../everyday.txt:206
#, fuzzy
msgid ""
"forward port all changes in `private2.6.14` branch to `master` branch "
"without a formal \"merging\"."
msgstr ""
"通常のマージを使わずに、`private2.6.14`ブランチの全ての変更を `master`ブラン"
"チへ転送する"

#. type: Title -
#: ../../everyday.txt:209
#, fuzzy, no-wrap
msgid "Integrator[[Integrator]]"
msgstr "インテグレーター (統合者)[[Integrator]]"

#. type: Plain text
#: ../../everyday.txt:215
#, fuzzy
msgid ""
"A fairly central person acting as the integrator in a group project receives "
"changes made by others, reviews and integrates them and publishes the result "
"for others to use, using these commands in addition to the ones needed by "
"participants."
msgstr ""
"インテグレーターとしてふるまう人は、グループプロジェクトにおいてかなりの中心"
"人物です、 他の人によって作られた変更を受け取り、それらのレビューと統合を行"
"い、 他の人が使えるようにするため結果を公開します、参加者(participants)が 必"
"要なものに加え、これらのコマンドを使います。"

#. type: Plain text
#: ../../everyday.txt:218
#, fuzzy
msgid "linkgit:git-am[1] to apply patches e-mailed in from your contributors."
msgstr ""
"linkgit:git-am[1] は、(パッチの)寄稿者からe-mailされたパッチを適用します。"

#. type: Plain text
#: ../../everyday.txt:220
#, fuzzy
msgid "linkgit:git-pull[1] to merge from your trusted lieutenants."
msgstr ""
"linkgit:git-pull[1] は、あなたの信用している副官(の修正)をマージします。"

#. type: Plain text
#: ../../everyday.txt:223
#, fuzzy
msgid ""
"linkgit:git-format-patch[1] to prepare and send suggested alternative to "
"contributors."
msgstr "linkgit:git-format-patch[1] は、寄稿者への代案の準備と送信を行います。"

#. type: Plain text
#: ../../everyday.txt:225
#, fuzzy
msgid "linkgit:git-revert[1] to undo botched commits."
msgstr "linkgit:git-revert[1] はやり損なったコミットを元に戻します。"

#. type: Plain text
#: ../../everyday.txt:227
#, fuzzy
msgid "linkgit:git-push[1] to publish the bleeding edge."
msgstr "linkgit:git-push[1]は新しいテクノロジーを公開します。"

#. type: Labeled list
#: ../../everyday.txt:232
#, fuzzy, no-wrap
#| msgid "My typical GIT day."
msgid "My typical Git day."
msgstr "私の典型的なGITの一日"

#. type: delimited block -
#: ../../everyday.txt:255
#, fuzzy, no-wrap
msgid ""
"$ git status <1>\n"
"$ git show-branch <2>\n"
"$ mailx <3>\n"
"& s 2 3 4 5 ./+to-apply\n"
"& s 7 8 ./+hold-linus\n"
"& q\n"
"$ git checkout -b topic/one master\n"
"$ git am -3 -i -s -u ./+to-apply <4>\n"
"$ compile/test\n"
"$ git checkout -b hold/linus && git am -3 -i -s -u ./+hold-linus <5>\n"
"$ git checkout topic/one && git rebase master <6>\n"
"$ git checkout pu && git reset --hard next <7>\n"
"$ git merge topic/one topic/two && git merge hold/linus <8>\n"
"$ git checkout maint\n"
"$ git cherry-pick master~4 <9>\n"
"$ compile/test\n"
"$ git tag -s -m \"GIT 0.99.9x\" v0.99.9x <10>\n"
"$ git fetch ko && git show-branch master maint 'tags/ko-*' <11>\n"
"$ git push ko <12>\n"
"$ git push ko v0.99.9x <13>\n"
msgstr ""
"$ git status <1>\n"
"$ git show-branch <2>\n"
"$ mailx <3>\n"
"& s 2 3 4 5 ./+to-apply\n"
"& s 7 8 ./+hold-linus\n"
"& q\n"
"$ git checkout -b topic/one master\n"
"$ git am -3 -i -s -u ./+to-apply <4>\n"
"$ compile/test\n"
"$ git checkout -b hold/linus && git am -3 -i -s -u ./+hold-linus <5>\n"
"$ git checkout topic/one && git rebase master <6>\n"
"$ git checkout pu && git reset --hard next <7>\n"
"$ git merge topic/one topic/two && git merge hold/linus <8>\n"
"$ git checkout maint\n"
"$ git cherry-pick master~4 <9>\n"
"$ compile/test\n"
"$ git tag -s -m \"GIT 0.99.9x\" v0.99.9x <10>\n"
"$ git fetch ko && git show-branch master maint 'tags/ko-*' <11>\n"
"$ git push ko <12>\n"
"$ git push ko v0.99.9x <13>\n"

#. type: Plain text
#: ../../everyday.txt:258
#, fuzzy
msgid "see what I was in the middle of doing, if any."
msgstr "何か作業途中のものが無かったか確認します。"

#. type: Plain text
#: ../../everyday.txt:260
#, fuzzy
msgid "see what topic branches I have and think about how ready they are."
msgstr "作っていたり準備しようとしていたトピックブランチがないか確認します。"

#. type: Plain text
#: ../../everyday.txt:262
#, fuzzy
msgid ""
"read mails, save ones that are applicable, and save others that are not "
"quite ready."
msgstr ""
"メールを読みます、適用可能なものはセーブし、準備が完全に 整っていないものは違"
"う場所にセーブします。"

#. type: Plain text
#: ../../everyday.txt:263
#, fuzzy
msgid "apply them, interactively, with my sign-offs."
msgstr "それらを対話的に、私の署名を付け、適用していきます。"

#. type: Plain text
#: ../../everyday.txt:265
#, fuzzy
msgid "create topic branch as needed and apply, again with my sign-offs."
msgstr ""
"必要に応じて適用するためのトピックブランチを作成します、 再び署名を付けます。"

#. type: Plain text
#: ../../everyday.txt:267
#, fuzzy
msgid ""
"rebase internal topic branch that has not been merged to the master, nor "
"exposed as a part of a stable branch."
msgstr ""
"内部のトピックブランチをリベースします、まだマスターにもマージされませんし、 "
"安定ブランチとして公開もされません。"

#. type: Plain text
#: ../../everyday.txt:268
#, fuzzy
msgid "restart `pu` every time from the next."
msgstr ""
"`pu`(訳注:proposed updates=提案された更新 の略)は常にnextから再開します。"

#. type: Plain text
#: ../../everyday.txt:269
#, fuzzy
msgid "and bundle topic branches still cooking."
msgstr "そしてトピックブランチをバンドルし、調理を進めていきます。"

#. type: Plain text
#: ../../everyday.txt:270
#, fuzzy
msgid "backport a critical fix."
msgstr "重大な修正をバックポートします。"

#. type: Plain text
#: ../../everyday.txt:271
#, fuzzy
msgid "create a signed tag."
msgstr "署名付きのタグを作成します。"

#. type: Plain text
#: ../../everyday.txt:274
#, fuzzy
msgid ""
"make sure I did not accidentally rewind master beyond what I already pushed "
"out.  `ko` shorthand points at the repository I have at kernel.org, and "
"looks like this:"
msgstr ""
"意図せず、すでにpushしたバージョンよりもマスターを巻き戻してしまっていないか"
"確認します。 `ko`は、私がkernel.orgに持っているレポジトリを簡潔に表したもの"
"で、このようになっています:"

#. type: delimited block -
#: ../../everyday.txt:285
#, fuzzy, no-wrap
msgid ""
"$ cat .git/remotes/ko\n"
"URL: kernel.org:/pub/scm/git/git.git\n"
"Pull: master:refs/tags/ko-master\n"
"Pull: next:refs/tags/ko-next\n"
"Pull: maint:refs/tags/ko-maint\n"
"Push: master\n"
"Push: next\n"
"Push: +pu\n"
"Push: maint\n"
msgstr ""
"$ cat .git/remotes/ko\n"
"URL: kernel.org:/pub/scm/git/git.git\n"
"Pull: master:refs/tags/ko-master\n"
"Pull: next:refs/tags/ko-next\n"
"Pull: maint:refs/tags/ko-maint\n"
"Push: master\n"
"Push: next\n"
"Push: +pu\n"
"Push: maint\n"

#. type: Plain text
#: ../../everyday.txt:290
#, fuzzy
msgid ""
"In the output from `git show-branch`, `master` should have everything `ko-"
"master` has, and `next` should have everything `ko-next` has."
msgstr ""
"`git show-branch`の出力の中で、`master`は`ko-master`の持つ 全てを持っているべ"
"きであり、`next`は`ko-next`の持つ全てを 持っているべきです。"

#. type: Plain text
#: ../../everyday.txt:292
#, fuzzy
msgid "push out the bleeding edge."
msgstr "新しい修正をプッシュします。"

#. type: Plain text
#: ../../everyday.txt:293
#, fuzzy
msgid "push the tag out, too."
msgstr "タグもプッシュします。"

#. type: Title -
#: ../../everyday.txt:296
#, fuzzy, no-wrap
msgid "Repository Administration[[Repository Administration]]"
msgstr "レポジトリ管理者[[Repository Administration]]"

#. type: Plain text
#: ../../everyday.txt:300
#, fuzzy
msgid ""
"A repository administrator uses the following tools to set up and maintain "
"access to the repository by developers."
msgstr ""
"レポジトリ管理者は以下のツールを使い、デベロッパによるレポジトリアクセスの "
"セットアップとメンテナンスを行います。"

#. type: Plain text
#: ../../everyday.txt:303
#, fuzzy
msgid "linkgit:git-daemon[1] to allow anonymous download from repository."
msgstr ""
"linkgit:git-daemon[1] レポジトリから匿名でダウンロード することを許可します。"

#. type: Plain text
#: ../../everyday.txt:306
#, fuzzy
msgid ""
"linkgit:git-shell[1] can be used as a 'restricted login shell' for shared "
"central repository users."
msgstr ""
"linkgit:git-shell[1] は共有中央レポジトリのユーザーのために、 '制限されたログ"
"インシェル'のようなものが使えます。"

#. type: Plain text
#: ../../everyday.txt:309
#, fuzzy
msgid ""
"link:howto/update-hook-example.txt[update hook howto] has a good example of "
"managing a shared central repository."
msgstr ""
"link:howto/update-hook-example.txt[update hook howto] には 共有中央レポジトリ"
"管理の良い例が載っています。"

#. type: Labeled list
#: ../../everyday.txt:313
#, fuzzy, no-wrap
msgid "We assume the following in /etc/services"
msgstr "We assume the following in /etc/services"

#. type: delimited block -
#: ../../everyday.txt:318
#, fuzzy, no-wrap
msgid ""
"$ grep 9418 /etc/services\n"
"git\t\t9418/tcp\t\t# Git Version Control System\n"
msgstr ""
"$ grep 9418 /etc/services\n"
"git\t\t9418/tcp\t\t# Git Version Control System\n"

#. type: Labeled list
#: ../../everyday.txt:320
#, fuzzy, no-wrap
msgid "Run git-daemon to serve /pub/scm from inetd."
msgstr "git-daemonを起動し、inetdから/pub/scmに供給します。"

#. type: delimited block -
#: ../../everyday.txt:326
#, fuzzy, no-wrap
msgid ""
"$ grep git /etc/inetd.conf\n"
"git\tstream\ttcp\tnowait\tnobody \\\n"
"  /usr/bin/git-daemon git-daemon --inetd --export-all /pub/scm\n"
msgstr ""
"$ grep git /etc/inetd.conf\n"
"git\tstream\ttcp\tnowait\tnobody \\\n"
"  /usr/bin/git-daemon git-daemon --inetd --export-all /pub/scm\n"

#. type: Plain text
#: ../../everyday.txt:329
#, fuzzy
msgid "The actual configuration line should be on one line."
msgstr "実際の設定行は一行にする必要があります。"

#. type: Labeled list
#: ../../everyday.txt:330
#, fuzzy, no-wrap
msgid "Run git-daemon to serve /pub/scm from xinetd."
msgstr "git-daemonを起動し、xinetdから/pub/scmに供給します。"

#. type: delimited block -
#: ../../everyday.txt:348
#, fuzzy, no-wrap
msgid ""
"$ cat /etc/xinetd.d/git-daemon\n"
"# default: off\n"
"# description: The Git server offers access to Git repositories\n"
"service git\n"
"{\n"
"        disable = no\n"
"        type            = UNLISTED\n"
"        port            = 9418\n"
"        socket_type     = stream\n"
"        wait            = no\n"
"        user            = nobody\n"
"        server          = /usr/bin/git-daemon\n"
"        server_args     = --inetd --export-all --base-path=/pub/scm\n"
"        log_on_failure  += USERID\n"
"}\n"
msgstr ""
"$ cat /etc/xinetd.d/git-daemon\n"
"# default: off\n"
"# description: The git server offers access to git repositories\n"
"service git\n"
"{\n"
"        disable = no\n"
"        type            = UNLISTED\n"
"        port            = 9418\n"
"        socket_type     = stream\n"
"        wait            = no\n"
"        user            = nobody\n"
"        server          = /usr/bin/git-daemon\n"
"        server_args     = --inetd --export-all --base-path=/pub/scm\n"
"        log_on_failure  += USERID\n"
"}\n"

#. type: Plain text
#: ../../everyday.txt:352
#, fuzzy
msgid ""
"Check your xinetd(8) documentation and setup, this is from a Fedora system.  "
"Others might be different."
msgstr ""
"あなたのxinetd(8)ドキュメントを調べて設定して下さい、これはFedoraシステムのも"
"のです。 他では違うかもしれません。"

#. type: Labeled list
#: ../../everyday.txt:353
#, fuzzy, no-wrap
msgid "Give push/pull only access to developers."
msgstr "push/pull専用のアクセスを開発者に与える。"

#. type: delimited block -
#: ../../everyday.txt:363
#, fuzzy, no-wrap
msgid ""
"$ grep git /etc/passwd <1>\n"
"alice:x:1000:1000::/home/alice:/usr/bin/git-shell\n"
"bob:x:1001:1001::/home/bob:/usr/bin/git-shell\n"
"cindy:x:1002:1002::/home/cindy:/usr/bin/git-shell\n"
"david:x:1003:1003::/home/david:/usr/bin/git-shell\n"
"$ grep git /etc/shells <2>\n"
"/usr/bin/git-shell\n"
msgstr ""
"$ grep git /etc/passwd <1>\n"
"alice:x:1000:1000::/home/alice:/usr/bin/git-shell\n"
"bob:x:1001:1001::/home/bob:/usr/bin/git-shell\n"
"cindy:x:1002:1002::/home/cindy:/usr/bin/git-shell\n"
"david:x:1003:1003::/home/david:/usr/bin/git-shell\n"
"$ grep git /etc/shells <2>\n"
"/usr/bin/git-shell\n"

#. type: Plain text
#: ../../everyday.txt:368
#, fuzzy
msgid ""
"log-in shell is set to /usr/bin/git-shell, which does not allow anything but "
"`git push` and `git pull`.  The users should get an ssh access to the "
"machine."
msgstr ""
"ログインシェルは/usr/bin/git-shellに設定されます、 `git push` と `git pull` "
"以外は何も許可されません。ユーザはマシンに対してsshでアクセスするべきです。"

#. type: Plain text
#: ../../everyday.txt:370
#, fuzzy
msgid ""
"in many distributions /etc/shells needs to list what is used as the login "
"shell."
msgstr ""
"多くのディストリビューションにおいて、/etc/shellsにログインシェルとして 使わ"
"れるものを記入しておく必要があります。"

#. type: Labeled list
#: ../../everyday.txt:371
#, fuzzy, no-wrap
msgid "CVS-style shared repository."
msgstr "CVSスタイルの共有レポジトリ。"

#. type: delimited block -
#: ../../everyday.txt:394
#, fuzzy, no-wrap
msgid ""
"$ grep git /etc/group <1>\n"
"git:x:9418:alice,bob,cindy,david\n"
"$ cd /home/devo.git\n"
"$ ls -l <2>\n"
"  lrwxrwxrwx   1 david git    17 Dec  4 22:40 HEAD -> refs/heads/master\n"
"  drwxrwsr-x   2 david git  4096 Dec  4 22:40 branches\n"
"  -rw-rw-r--   1 david git    84 Dec  4 22:40 config\n"
"  -rw-rw-r--   1 david git    58 Dec  4 22:40 description\n"
"  drwxrwsr-x   2 david git  4096 Dec  4 22:40 hooks\n"
"  -rw-rw-r--   1 david git 37504 Dec  4 22:40 index\n"
"  drwxrwsr-x   2 david git  4096 Dec  4 22:40 info\n"
"  drwxrwsr-x   4 david git  4096 Dec  4 22:40 objects\n"
"  drwxrwsr-x   4 david git  4096 Nov  7 14:58 refs\n"
"  drwxrwsr-x   2 david git  4096 Dec  4 22:40 remotes\n"
"$ ls -l hooks/update <3>\n"
"  -r-xr-xr-x   1 david git  3536 Dec  4 22:40 update\n"
"$ cat info/allowed-users <4>\n"
"refs/heads/master\talice\\|cindy\n"
"refs/heads/doc-update\tbob\n"
"refs/tags/v[0-9]*\tdavid\n"
msgstr ""
"$ grep git /etc/group <1>\n"
"git:x:9418:alice,bob,cindy,david\n"
"$ cd /home/devo.git\n"
"$ ls -l <2>\n"
"  lrwxrwxrwx   1 david git    17 Dec  4 22:40 HEAD -> refs/heads/master\n"
"  drwxrwsr-x   2 david git  4096 Dec  4 22:40 branches\n"
"  -rw-rw-r--   1 david git    84 Dec  4 22:40 config\n"
"  -rw-rw-r--   1 david git    58 Dec  4 22:40 description\n"
"  drwxrwsr-x   2 david git  4096 Dec  4 22:40 hooks\n"
"  -rw-rw-r--   1 david git 37504 Dec  4 22:40 index\n"
"  drwxrwsr-x   2 david git  4096 Dec  4 22:40 info\n"
"  drwxrwsr-x   4 david git  4096 Dec  4 22:40 objects\n"
"  drwxrwsr-x   4 david git  4096 Nov  7 14:58 refs\n"
"  drwxrwsr-x   2 david git  4096 Dec  4 22:40 remotes\n"
"$ ls -l hooks/update <3>\n"
"  -r-xr-xr-x   1 david git  3536 Dec  4 22:40 update\n"
"$ cat info/allowed-users <4>\n"
"refs/heads/master\talice\\|cindy\n"
"refs/heads/doc-update\tbob\n"
"refs/tags/v[0-9]*\tdavid\n"

#. type: Plain text
#: ../../everyday.txt:397
#, fuzzy
msgid "place the developers into the same git group."
msgstr "開発者は同じgitグループに入れておきます。"

#. type: Plain text
#: ../../everyday.txt:398
#, fuzzy
msgid "and make the shared repository writable by the group."
msgstr "そして共有レポジトリを作成し、グループは書き込み可能にしておきます。"

#. type: Plain text
#: ../../everyday.txt:400
#, fuzzy
msgid ""
"use update-hook example by Carl from Documentation/howto/ for branch policy "
"control."
msgstr ""
"update-hookの例は、Carlによって書かれた、Documentation/howto/にある ブランチ"
"ポリシーの管理(branch policy control)を使って下さい。"

#. type: Plain text
#: ../../everyday.txt:403
#, fuzzy
msgid ""
"alice and cindy can push into master, only bob can push into doc-update.  "
"david is the release manager and is the only person who can create and push "
"version tags."
msgstr ""
"aliceとcindyはマスターブランチに対してプッシュ出来ます、bobはdoc-updateにのみ"
"プッシュできます。 davidはリリースマネージャーであり、バージョンタグの生成と"
"プッシュが行える 唯一の人物です。"

#. type: Labeled list
#: ../../everyday.txt:404
#, fuzzy, no-wrap
msgid "HTTP server to support dumb protocol transfer."
msgstr "HTTPサーバーがダム(dumb)プロトコルによる転送をサポートします。"

#. type: delimited block -
#: ../../everyday.txt:410
#, fuzzy, no-wrap
msgid ""
"dev$ git update-server-info <1>\n"
"dev$ ftp user@isp.example.com <2>\n"
"ftp> cp -r .git /home/user/myproject.git\n"
msgstr ""
"dev$ git update-server-info <1>\n"
"dev$ ftp user@isp.example.com <2>\n"
"ftp> cp -r .git /home/user/myproject.git\n"

#. type: Plain text
#: ../../everyday.txt:413
#, fuzzy
msgid "make sure your info/refs and objects/info/packs are up-to-date"
msgstr "info/refsやobjects/info/packsが更新されているか確認します。"

#. type: Plain text
#: ../../everyday.txt:413
#, fuzzy
msgid "upload to public HTTP server hosted by your ISP."
msgstr ""
"あなたのISPでホスティングしている公開HTTPサーバーにアップロードします。"
